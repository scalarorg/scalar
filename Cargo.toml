[workspace]
resolver = "2"

members = [
  "crates/scalar-core",
  "crates/scalar-node",
  "crates/scalar-types",
  "crates/scalar-config",
  "crates/scalar-keys",
  "crates/scalar-transaction-checks",
  "crates/scalar-transaction-builder",
  "crates/scalar-genesis-builder",
  "crates/scalar-swarm-config",
  "crates/scalar-archival",
  "crates/scalar-storage",
  "crates/scalar-json",
  "crates/scalar-json-rpc",
  "crates/scalar-json-rpc-types",
  "crates/scalar-framework",
  "crates/scalar-network",
  "crates/scalar-kvstore",
  "crates/scalar-telemetry",
  # "crates/sui-protocol-config",
  # "crates/sui-protocol-config-macros",
  # "crates/scalar-move",
  # "crates/scalar-transaction",
  # "crates/scalar-tss",
  "crates/shared-crypto",
  "crates/workspace-hack",

  #    "narwhal/config",
  #    "narwhal/consensus",
  #    "narwhal/crypto",
  #    "narwhal/dag",
  #    "narwhal/examples",
  #    "narwhal/executor",
  #    "narwhal/network",
  #    "narwhal/node",
  #    "narwhal/primary",
  #    "narwhal/storage",
  #    "narwhal/test-utils",
  #    "narwhal/types",
  #    "narwhal/worker",
  "scalar-execution",
  "crates/scalar-consensus-adapter",
  "crates/scalar-consensus-adapter/common",
  # Reth packages
  "crates-reth/bin/reth",
  "crates-reth/config",
  "crates-reth/consensus/auto-seal",
  "crates-reth/consensus/beacon",
  "crates-reth/consensus/common",
  "crates-reth/consensus/narwhal",
  "crates-reth/blockchain-tree",
  "crates-reth/interfaces",
  "crates-reth/payload/builder",
  "crates-reth/metrics",
  "crates-reth/metrics/metrics-derive",
  "crates-reth/net/common",
  "crates-reth/net/ecies",
  "crates-reth/net/eth-wire",
  "crates-reth/net/discv4",
  "crates-reth/net/dns",
  "crates-reth/net/nat",
  "crates-reth/net/network-api",
  "crates-reth/net/network",
  "crates-reth/net/downloaders",
  "crates-reth/payload/basic",
  "crates-reth/primitives",
  "crates-reth/prune",
  "crates-reth/revm",
  "crates-reth/revm/revm-inspectors",
  "crates-reth/rpc/ipc",
  "crates-reth/rpc/rpc",
  "crates-reth/rpc/rpc-api",
  "crates-reth/rpc/rpc-builder",
  "crates-reth/rpc/rpc-engine-api",
  "crates-reth/rpc/rpc-types",
  "crates-reth/rpc/rpc-testing-util",
  "crates-reth/snapshot",
  "crates-reth/stages",
  "crates-reth/storage/codecs",
  "crates-reth/storage/db",
  "crates-reth/storage/libmdbx-rs",
  "crates-reth/storage/libmdbx-rs/mdbx-sys",
  "crates-reth/storage/provider",
  "crates-reth/storage/nippy-jar",
  "crates-reth/tracing",
  "crates-reth/tasks",
  "crates-reth/transaction-pool",
  "crates-reth/trie",
  "crates-reth/testing/ef-tests",
  "crates-reth/rpc/rpc-types-compat",
  "crates-reth/tokio-util",
  #"examples",
  #"examples/additional-rpc-namespace-in-cli",
  #"examples/cli-extension-event-hooks",
  #"examples/rpc-db",
  #"examples/manual-p2p",
  #"examples/beacon-api-sse",
  #"examples/trace-transaction-cli",
]

[workspace.package]
# This version string will be inherited by sui-core, sui-faucet, sui-node, sui-tools, sui-sdk, and sui crates.
version = "1.5.0"
edition = "2021"
rust-version = "1.70"                              # Remember to update clippy.toml and README.md
license = "MIT OR Apache-2.0"
homepage = "https://scalar.org/"
repository = "https://github.com/scalarorg/scalar"

# Dependencies that should be kept in sync through the whole workspace
[workspace.dependencies]

# Common use in both Reth and Sui
arbitrary = { version = "1.1.7", features = [
  "derive",
  "derive_arbitrary",
] } #misc-testing

async-trait = "0.1.68" #Reth
# async-trait = "0.1.61" #Sui
bytes = "1.5"
#clap = "4" #Reth
clap = { version = "4.3.2", features = ["derive"] } #Sui
eyre = "0.6.8"
# futures = "0.3.25" #Reth
# futures = "0.3.26" #Sui
futures = "0.3.25"
itertools = "0.11"

# jsonrpsee = { version = "0.20" } #Reth
# jsonrpsee = { git = "https://github.com/wlmyng/jsonrpsee.git", rev = "b1b300784795f6a64d0fcdf8f03081a9bc38bde8", features = [
#   "server",
#   "macros",
#   "ws-client",
#   "http-client",
#   "jsonrpsee-core",
# ] } #Sui
# rpc
jsonrpsee = { version = "0.20" }
jsonrpsee-core = { version = "0.20" }
jsonrpsee-types = { version = "0.20" }

once_cell = "1.18.0"
parking_lot = "0.12"
proc-macro2 = "1.0"  #Reth
#proc-macro2 = "1.0.47" #Sui
proptest = "1.1.0"
proptest-derive = "0.4" #Reth
#proptest-derive = "0.3.0" #Sui
#quote = "1.0.23"
quote = "1.0"
rand = "0.8.5"
rayon = "1.7"  #Reth
#rayon = "1.5.3" #Sui
#serde = { version = "1.0", default-features = false } #Reth
#serde = { version = "1.0.144", features = ["derive", "rc"] } #sui
serde = { version = "1.0.144", default-features = false, features = [
  "derive",
  "rc",
] }
serde_json = { version = "1.0.95", features = [
  "preserve_order",
  "arbitrary_precision",
] }
#strum = "0.25" #Reth
strum = { version = "0.25", features = ["derive"] } #Sui
# syn = "2.0" #Reth
# syn = { version = "1.0.104", features = ["full", "derive", "extra-traits",] } #Sui
syn = { version = "2.0" }
tempfile = { version = "3", default-features = false }  #misc-testing
thiserror = { version = "1", default-features = false }
# tokio = { version = "1.21", default-features = false } #Reth
# tokio = { version = "1", features = ["full", "test-util", "tracing"] } #Sui
tokio = { version = "1.21", default-features = false, features = [
  "full",
  "test-util",
  "tracing",
] }
# tokio-stream = "0.1.11" #Reth
# tokio-stream = { version = "0.1", features = ["net", "sync"] }         #Sui
tokio-stream = "0.1.11"
tokio-util = { version = "0.7", features = ["codec", "compat", "io"] }
#tracing = "0.1.0" #Reth
tracing = "0.1.37"         #sui
tracing-appender = "0.2.2"


# For sui only
anyhow = "1.0.71"
arc-swap = { version = "1.5.1", features = ["serde"] }
async-recursion = "1.0.4"

aws-config = "0.56"
aws-sdk-ec2 = { version = "0.29" }
aws-sdk-dynamodb = "0.29.0"
aws-sdk-s3 = { version = "0.29" }
axum = { version = "0.6.6", default-features = false, features = [
  "headers",
  "tokio",
  "http1",
  "http2",
  "json",
  "matched-path",
  "original-uri",
  "form",
  "query",
] }
axum-extra = "0.4.2"
axum-server = { version = "0.5.1", default-features = false, features = [
  "tls-rustls",
] }
backoff = { version = "0.4.0", features = [
  "futures",
  "futures-core",
  "pin-project-lite",
  "tokio",
  "tokio_1",
] }
base64 = "0.21.2"
base64-url = "2"
bcs = { version = "0.1", default-features = false }
better_any = "0.1.1"
bincode = "1.3.3"
bip32 = "0.4.0"
byteorder = "1.4.3"
cached = "0.43.0"
camino = "1.1.1"
cfg-if = "1.0.0"
chrono = { version = "0.4.26", features = ["clock", "serde"] }
colored = "2.0.0"
const-str = "0.5.3"
criterion = { version = "0.5.0", features = [
  "async",
  "async_tokio",
  "html_reports",
] }
csv = "1.2.1"
dashmap = "5.4.0"
derivative = "2.2.0"
derive_builder = "0.12.0"
derive_more = "0.99.17"
dirs = "4.0.0"
ed25519 = { version = "1.5.0", features = ["pkcs8", "alloc", "zeroize"] }
ed25519-consensus = { version = "2.0.1", features = ["serde"] }
either = "1.8.0"
enum_dispatch = "^0.3"
expect-test = "1.4.0"
fdlimit = "0.2.1"
fs_extra = "1.3.0"

futures-core = "0.3.21"
git-version = "0.3.5"
governor = "0.6.0"
hex = "0.4.3"
hex-literal = "0.3.4"
http = "0.2.8"
http-body = "0.4.5"
humantime = "2.1.0"
hyper = "0.14.20"
hyper-rustls = { version = "0.24", features = ["rustls-native-certs", "http2"] }
indicatif = "0.17.2"
im = "15"
indexmap = { version = "1.9.2", features = ["serde"] }

insta = { version = "1.21.1", features = ["redactions", "yaml", "json"] }
integer-encoding = "3.0.1"

json_to_table = { git = "https://github.com/zhiburt/tabled/", rev = "e449317a1c02eb6b29e409ad6617e5d9eb7b3bd4" }
leb128 = "0.2.5"
linked-hash-map = "0.5.6"
lru = "0.12"
mockall = "0.11.4"
more-asserts = "0.3.1"
match_opt = "0.1.2"
num_cpus = "1.15.0"
num_enum = "0.6.1"
object_store = { version = "0.7", features = ["aws", "gcp", "azure"] }
pprof = { version = "0.11.0", features = [
  "cpp",
  "frame-pointer",
  "criterion",
  "flamegraph",
] }
pretty_assertions = "1.3.0"

prometheus = "0.13.3"
prometheus-http-query = { version = "0.6.6", default_features = false, features = [
  "rustls-tls",
] }

prost = "0.12.1"
prost-build = "0.12.1"
#protobuf = {version="2.28", features=["with-bytes"]}
protobuf = { version = "3.3.0", features = ["with-bytes"] }
protobuf-src = "1.1.0"
quinn-proto = "^0.10.0"

regex = "1.7.1"

reqwest = { version = "0.11.18", default_features = false, features = [
  "blocking",
  "json",
  "rustls-tls",
] }
roaring = "0.10.1"
rocksdb = { version = "0.21.0", features = [
  "snappy",
  "lz4",
  "zstd",
  "zlib",
  "multi-threaded-cf",
], default-features = false }
rustversion = "1.0.9"

schemars = { version = "0.8.10", features = ["either"] }
scopeguard = "1.1"

serde-name = "0.2.1"
serde-reflection = "0.3.6"

serde_repr = "0.1"
serde_test = "1.0.147"
serde_with = { version = "2.1.0", features = ["hex"] }
serde_yaml = "0.8.26"
signature = "1.6.0"
slip10_ed25519 = "0.1.3"
smallvec = "1.10.0"
snap = "1.1.0"
static_assertions = "1.1.0"
structopt = "0.3.26"

strum_macros = "0.24.3"
tabled = { version = "0.12" }
tap = "1.0.1"
test-fuzz = "3.0.4"
thiserror-impl = { version = "1", default-features = false }
tiny-bip39 = { version = "1" }
tinytemplate = { version = "1", default-features = false }
tinyvec = { version = "1", features = ["alloc"] }
tinyvec_macros = { version = "0.1", default-features = false }

tokio-io-timeout = { version = "1", default-features = false }
tokio-macros = { version = "2", default-features = false }
tokio-retry = { version = "0.3", default-features = false }
tokio-rustls = "0.24"
tokio-tungstenite = { version = "0.20" }


tonic = { version = "0.10", features = ["transport", "tls"] }
tonic-build = { version = "0.10", features = ["prost", "transport"] }
tonic-health = "0.10"
tower = { version = "0.4.12", features = [
  "full",
  "util",
  "timeout",
  "load-shed",
  "limit",
] }
tower-http = { version = "0.3.4", features = [
  "cors",
  "full",
  "trace",
  "set-header",
  "propagate-header",
] }
# tower-http = { version="0.4", features = ["trace"] }
tower-layer = "0.3.2"
tracing-subscriber = { version = "0.3.15", default-features = false, features = [
  "std",
  "smallvec",
  "fmt",
  "ansi",
  "time",
  "json",
  "registry",
  "env-filter",
] }
zstd = "0.12.3"
zeroize = "1.6.0"
url = "2.3.1"
uuid = { version = "1.1.2", features = ["v4", "fast-rng"] }

#narwhal-config = { path = "narwhal/config" }
#narwhal-consensus = { path = "narwhal/consensus" }
#narwhal-crypto = { path = "narwhal/crypto" }
#narwhal-dag = { path = "narwhal/dag" }
#narwhal-examples = { path = "narwhal/examples" }
#narwhal-executor = { path = "narwhal/executor" }
#narwhal-network = { path = "narwhal/network" }
#narwhal-node = { path = "narwhal/node" }
#narwhal-primary = { path = "narwhal/primary" }
#narwhal-storage = { path = "narwhal/storage" }
#narwhal-test-utils = { path = "narwhal/test-utils" }
#narwhal-types = { path = "narwhal/types" }
#narwhal-worker = { path = "narwhal/worker" }

scalar-execution = { path = "scalar-execution" }

scalar-config = { path = "crates/scalar-config" }
scalar-core = { path = "crates/scalar-core" }
scalar-keys = { path = "crates/scalar-keys" }
scalar-node = { path = "crates/scalar-node" }
scalar-types = { path = "crates/scalar-types" }
scalar-transaction-checks = { path = "crates/scalar-transaction-checks" }
scalar-transaction-builder = { path = "crates/scalar-transaction-builder" }
scalar-genesis-builder = { path = "crates/scalar-genesis-builder" }
scalar-swarm-config = { path = "crates/scalar-swarm-config" }
scalar-archival = { path = "crates/scalar-archival" }
scalar-storage = { path = "crates/scalar-storage" }
#scalar-simulator = { path = "crates/scalar-simulator" }
scalar-json = { path = "crates/scalar-json" }
scalar-json-rpc = { path = "crates/scalar-json-rpc" }
scalar-json-rpc-types = { path = "crates/scalar-json-rpc-types" }
scalar-framework = { path = "crates/scalar-framework" }
scalar-network = { path = "crates/scalar-network" }
scalar-kvstore = { path = "crates/scalar-kvstore" }
scalar-snapshot = { path = "crates/scalar-snapshot" }
scalar-telemetry = { path = "crates/scalar-telemetry" }
scalar-consensus-adapter = { path = "crates/scalar-consensus-adapter" }
scalar-consensus-adapter-common = { path = "crates/scalar-consensus-adapter/common" }
# sui-protocol-config = { path = "crates/sui-protocol-config" }
# sui-protocol-config-macros = { path = "crates/sui-protocol-config-macros" }
#scalar-move = { path = "crates/scalar-move" }
#scalar-transaction = { path = "crates/scalar-transaction" }
scalar-tss = { path = "crates/scalar-tss" }
shared-crypto = { path = "crates/shared-crypto" }

config = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-config" }
crypto = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-crypto" }
narwhal-config = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-config" }
narwhal-crypto = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-crypto" }
narwhal-executor = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-executor" }
narwhal-network = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-network" }
narwhal-node = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-node" }
narwhal-primary = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-primary" }
narwhal-storage = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-storage" }
narwhal-test-utils = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-test-utils" }
narwhal-types = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-types" }
narwhal-worker = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "narwhal-worker" }

# anemo dependencies
anemo = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-build = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-cli = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-tower = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }

fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "517ec93ad2eba1807c9508f14953814a33523edc" }
fastcrypto-tbls = { git = "https://github.com/MystenLabs/fastcrypto", rev = "517ec93ad2eba1807c9508f14953814a33523edc" }
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "517ec93ad2eba1807c9508f14953814a33523edc", package = "fastcrypto-zkp" }

mysten-common = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "mysten-common" }
mysten-metrics = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "mysten-metrics" }
mysten-network = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "mysten-network" }
mysten-util-mem = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "mysten-util-mem" }
mysten-util-mem-derive = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "mysten-util-mem-derive" }

sui-enum-compat-util = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "enum-compat-util" }
sui-protocol-config = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-protocol-config" }
sui-protocol-config-macros = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-protocol-config-macros" }

sui-macros = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-macros" }
sui-proc-macros = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-macros" }

sui-open-rpc = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-open-rpc" }
sui-open-rpc-macros = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-open-rpc-macros" }
sui-simulator = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-simulator" }
sui-tls = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "sui-tls" }

telemetry-subscribers = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "telemetry-subscribers" }
store = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "typed-store" }
store-derive = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "typed-store-derive" }
typed-store = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "typed-store" }
typed-store-derive = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "typed-store-derive" }
typed-store-error = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "typed-store-error" }

workspace-hack = "0.1.0"

#From move workspace
ref-cast = "1.0.6"
ethnum = "1.0.4"
uint = "0.9.4"
num = "0.4.0"
num-bigint = "0.4.0"
primitive-types = { version = "0.10.1", features = ["impl-serde"] }


move-proc-macros = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-proc-macros" }
move-vm-profiler = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-vm-profiler" }
move-vm-types = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-vm-types" }
move-binary-format = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-binary-format" }
move-core-types = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-core-types" }
move-command-line-common = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-command-line-common" }
move-bytecode-utils = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-bytecode-utils" }
move-package = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-package" }
move-vm-config = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-vm-config" }
move-ir-types = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-ir-types" }
move-symbol-pool = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-symbol-pool" }
move-disassembler = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-disassembler" }
move-bytecode-source-map = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-bytecode-source-map" }
move-coverage = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-coverage" }
move-compiler = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-compiler" }

# For execution
move-bytecode-verifier = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-bytecode-verifier" }
move-vm-runtime = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-vm-runtime" }
move-stdlib = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-stdlib" }
move-abstract-stack = { git = "https://github.com/MystenLabs/sui", rev = "01a8af7fca6aa8d24cdafad87a1191e06ac75af8", package = "move-abstract-stack" }
# 23-11-08 TaiVV
# For Reth itegration
# Copy from Reth repository = "https://github.com/paradigmxyz/reth"
# revision 5daaa7fe27fea8680d817a9d6eac35d1236a3355 

# For Reth only
reth = { path = "./crates-reth/bin/reth" }
reth-primitives = { path = "./crates-reth/primitives" }
reth-interfaces = { path = "./crates-reth/interfaces" }
reth-provider = { path = "./crates-reth/storage/provider" }
reth-db = { path = "./crates-reth/storage/db" }
reth-rpc-types = { path = "./crates-reth/rpc/rpc-types" }
reth-rpc-builder = { path = "./crates-reth/rpc/rpc-builder" }
reth-blockchain-tree = { path = "./crates-reth/blockchain-tree" }
reth-metrics = { path = "./crates-reth/metrics" }
reth-revm = { path = "./crates-reth/revm" }
reth-payload-builder = { path = "./crates-reth/payload/builder" }
reth-transaction-pool = { path = "./crates-reth/transaction-pool" }
reth-tasks = { path = "./crates-reth/tasks" }
reth-network = { path = "./crates-reth/net/network" }
reth-network-api = { path = "./crates-reth/net/network-api" }
reth-rpc-types-compat = { path = "./crates-reth/rpc/rpc-types-compat" }
reth-discv4 = { path = "./crates-reth/net/discv4" }
reth-eth-wire = { path = "./crates-reth/net/eth-wire" }
reth-ecies = { path = "./crates-reth/net/ecies" }
reth-tracing = { path = "./crates-reth/tracing" }
reth-tokio-util = { path = "crates-reth/tokio-util" }
#For consensus
reth-snapshot = { path = "./crates-reth/snapshot" }
reth-stages = { path = "./crates-reth/stages" }
reth-downloaders = { path = "./crates-reth/net/downloaders" }
scalar-narwhal-consensus = { path = "./crates-reth/consensus/narwhal" }
# revm
revm = { git = "https://github.com/bluealloy/revm", rev = "1609e07c68048909ad1682c98cf2b9baa76310b5" }
revm-primitives = { git = "https://github.com/bluealloy/revm", rev = "1609e07c68048909ad1682c98cf2b9baa76310b5" }

# eth
alloy-primitives = "0.4"
alloy-dyn-abi = "0.4"
alloy-sol-types = "0.4"
alloy-rlp = "0.3"
ethers-core = { version = "2.0", default-features = false }
ethers-providers = { version = "2.0", default-features = false }
ethers-signers = { version = "2.0", default-features = false }
ethers-middleware = { version = "2.0", default-features = false }
discv5 = { git = "https://github.com/sigp/discv5", rev = "f289bbd4c57d499bb1bdb393af3c249600a1c662" }
igd = { git = "https://github.com/stevefan1999-personal/rust-igd", rev = "c2d1f83eb1612a462962453cb0703bc93258b173" }

aquamarine = "0.3"
# misc
bitflags = "2.4"
# js
boa_engine = "0.17"
boa_gc = "0.17"

futures-util = "0.3.25"

metrics = "0.21.1"     # Needed for `metrics-macro` to resolve the crate using `::metrics` notation
pin-project = "1.0.12"

# crypto
secp256k1 = { version = "0.27.0", default-features = false, features = [
  "global-context",
  "rand-std",
  "recovery",
] }
enr = { version = "0.9", default-features = false, features = ["k256"] }
# for eip-4844
c-kzg = "0.4.0"

# config
confy = "0.5"
toml = "0.8"

assert_matches = "1.5.0"
serial_test = "2"
