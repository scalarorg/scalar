[package]
name = "reth"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = """
Reth node implementation
"""

[package.metadata.cargo-udeps.ignore]
normal = [
  # Used for diagrams in docs
  "aquamarine",
]

[dependencies]
# reth
reth-config = { path = "../../config" }
reth-primitives = { workspace = true, features = ["arbitrary", "clap"] }
reth-db = { workspace = true, features = ["mdbx", "test-utils"] }
# TODO: Temporary use of the test-utils feature
reth-provider = { workspace = true, features = ["test-utils"] }
reth-revm = { path = "../../revm" }
reth-revm-inspectors = { path = "../../revm/revm-inspectors" }
reth-stages = { path = "../../stages" }
reth-interfaces = { workspace = true, features = ["test-utils", "clap"] }
reth-transaction-pool.workspace = true
reth-beacon-consensus = { path = "../../consensus/beacon" }
reth-auto-seal-consensus = { path = "../../consensus/auto-seal" }
reth-consensus-common = { path = "../../consensus/common" }
scalar-narwhal-consensus = { path = "../../consensus/narwhal" }
reth-blockchain-tree = { path = "../../blockchain-tree" }
reth-rpc-engine-api = { path = "../../rpc/rpc-engine-api" }
reth-rpc-builder = { path = "../../rpc/rpc-builder" }
reth-rpc = { path = "../../rpc/rpc" }
reth-rpc-types = { path = "../../rpc/rpc-types" }
reth-rpc-types-compat = { path = "../../rpc/rpc-types-compat" }
reth-rpc-api = { path = "../../rpc/rpc-api", features = ["client"] }
reth-network = { path = "../../net/network", features = ["serde"] }
reth-network-api.workspace = true
reth-downloaders = { path = "../../net/downloaders", features = ["test-utils"] }
reth-tracing.workspace = true
reth-tasks.workspace = true
reth-net-nat = { path = "../../net/nat" }
reth-payload-builder.workspace = true
reth-basic-payload-builder = { path = "../../payload/basic" }
reth-discv4 = { path = "../../net/discv4" }
reth-prune = { path = "../../prune" }
reth-snapshot = { path = "../../snapshot", features = ["clap"] }
reth-trie = { path = "../../trie" }
reth-nippy-jar = { path = "../../storage/nippy-jar" }

# crypto
alloy-rlp.workspace = true
secp256k1 = { workspace = true, features = [
  "global-context",
  "rand-std",
  "recovery",
] }

# tracing
tracing.workspace = true

# io
fdlimit = "0.2.1"
serde.workspace = true
serde_json.workspace = true
shellexpand = "3.0.0"
dirs-next = "2.0.0"
confy.workspace = true
toml = { workspace = true, features = ["display"] }

# metrics
metrics-exporter-prometheus = "0.12.1"
metrics-util = "0.15.0"
metrics-process = "1.0.9"
reth-metrics.workspace = true
metrics.workspace = true

# test vectors generation
proptest.workspace = true
rand.workspace = true

# tui
comfy-table = "7.0"
crossterm = "0.27.0"
tui = "0.19.0"
human_bytes = "0.4.1"

# async
tokio = { workspace = true, features = [
  "sync",
  "macros",
  "time",
  "rt-multi-thread",
] }
futures.workspace = true
pin-project.workspace = true

# http/rpc
hyper = "0.14.25"

# misc
aquamarine.workspace = true
eyre.workspace = true
clap = { workspace = true, features = ["derive"] }
tempfile.workspace = true
backon = "0.4"
thiserror.workspace = true
pretty_assertions = "1.3.0"
humantime = "2.1.0"
const-str = "0.5.6"
boyer-moore-magiclen = "0.2.16"
itertools.workspace = true

[target.'cfg(not(windows))'.dependencies]
jemallocator = { version = "0.5.0", optional = true }
jemalloc-ctl = { version = "0.5.0", optional = true }

[features]
default = ["jemalloc"]
jemalloc = ["dep:jemallocator", "dep:jemalloc-ctl"]
jemalloc-prof = ["jemalloc", "jemallocator?/profiling"]
min-error-logs = ["tracing/release_max_level_error"]
min-warn-logs = ["tracing/release_max_level_warn"]
min-info-logs = ["tracing/release_max_level_info"]
min-debug-logs = ["tracing/release_max_level_debug"]
min-trace-logs = ["tracing/release_max_level_trace"]
optimism = [
  "reth-primitives/optimism",
  "reth-revm/optimism",
  "reth-interfaces/optimism",
  "reth-rpc/optimism",
  "reth-rpc-engine-api/optimism",
  "reth-transaction-pool/optimism",
  "reth-provider/optimism",
  "reth-beacon-consensus/optimism",
  "reth-basic-payload-builder/optimism",
  "reth-network/optimism",
  "reth-network-api/optimism",
]
# no-op feature flag for switching between the `optimism` and default functionality in CI matrices
ethereum = []

[build-dependencies]
vergen = { version = "8.0.0", features = ["build", "cargo", "git", "gitcl"] }

[[bin]]
name = "reth"
path = "src/main.rs"

[[bin]]
name = "op-reth"
path = "src/optimism.rs"
required-features = ["optimism"]
