[package]
name = "scalar-core"
version = "0.1.0"
authors = ["Mysten Labs <build@mystenlabs.com>"]
license = "Apache-2.0"
publish = false
edition = "2021"

[dependencies]
anemo.workspace = true
anyhow = { workspace = true, features = ["backtrace"] }
arc-swap.workspace = true
async-trait.workspace = true
bcs.workspace = true
bytes.workspace = true
chrono.workspace = true
dashmap.workspace = true
either.workspace = true
enum_dispatch.workspace = true
eyre.workspace = true
futures.workspace = true
im.workspace = true
indexmap.workspace = true
itertools.workspace = true
lru.workspace = true
num_cpus.workspace = true
object_store.workspace = true
once_cell.workspace = true
parking_lot.workspace = true
pprof.workspace = true
prometheus.workspace = true
rand.workspace = true
rocksdb.workspace = true
scopeguard.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
signature.workspace = true
tap.workspace = true
tempfile.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "tracing", "test-util"] }
tokio-retry.workspace = true
tokio-stream.workspace = true
tracing.workspace = true

fastcrypto.workspace = true
fastcrypto-zkp.workspace = true
move-binary-format.workspace = true
move-bytecode-utils.workspace = true
move-core-types.workspace = true
move-package.workspace = true
move-symbol-pool.workspace = true
mysten-common.workspace = true
mysten-network.workspace = true
telemetry-subscribers.workspace = true
typed-store-derive.workspace = true
typed-store-error.workspace = true
typed-store.workspace = true
mysten-metrics.workspace = true
narwhal-config.workspace = true
narwhal-crypto.workspace = true
narwhal-executor.workspace = true
narwhal-network.workspace = true
narwhal-node.workspace = true
narwhal-test-utils.workspace = true
narwhal-types.workspace = true
narwhal-worker.workspace = true
shared-crypto.workspace = true
#sui-archival.workspace = true
#sui-config.workspace = true
#sui-execution = { path = "../../sui-execution" }
#sui-framework.workspace = true
#sui-swarm-config.workspace = true
sui-genesis-builder.workspace = true
sui-macros.workspace = true
sui-move-build.workspace = true
scalar-network.workspace = true
sui-protocol-config.workspace = true

scalar-archival.workspace = true
sui-simulator.workspace = true
scalar-storage.workspace = true
scalar-framework.workspace = true
scalar-config.workspace = true
scalar-execution.workspace = true
scalar-swarm-config.workspace = true
scalar-types.workspace = true
scalar-transaction-checks.workspace = true
scalar-json-rpc-types.workspace = true
workspace-hack.workspace = true
zeroize.workspace = true
mysticeti-core = { git = "https://github.com/MystenLabs/mysticeti", rev = "318d61d27f47d257d99a86983d835e9e9756bc59" }

[dev-dependencies]
clap.workspace = true
criterion.workspace = true
expect-test.workspace = true
fs_extra.workspace = true
more-asserts.workspace = true
pretty_assertions.workspace = true
serde-reflection.workspace = true
serde_yaml.workspace = true

move-symbol-pool.workspace = true

sui-test-transaction-builder.workspace = true
scalar-types = { workspace = true, features = ["test-utils"] }

[target.'cfg(not(target_env = "msvc"))'.dev-dependencies]
pprof.workspace = true
test-fuzz.workspace = true

sui-macros.workspace = true
sui-protocol-config.workspace = true

[[example]]
name = "generate-format"
path = "src/generate_format.rs"
test = false

[[bench]]
name = "verified_cert_cache_bench"
harness = false

[[bench]]
name = "batch_verification_bench"
harness = false

[features]
test-utils = []
